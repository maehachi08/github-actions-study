{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"caching/","title":"Caching","text":""},{"location":"caching/#action","title":"Action","text":""},{"location":"caching/#setup-language-action","title":"setup-{language} action","text":"<p>The setup-{language} actions like action/setup-java, action/setup-python, you can cache packages dependencies.These setup-{language} actions use toolkit/cache (e.g. setup-java@v4).</p> <p>Dependency files is saved to the cache storage by the setup-{language} action. Save files can be downloaded on the next workflow.</p> <p>e.g. in the action/setup-java, dependency files under the <code>~/.m2/repository</code> directory will be saved into the cache storage. https://github.com/actions/setup-java/blob/v4.6.0/src/cache.ts#L23-L64</p> <ul> <li> <p>action/setup-java</p> sample<pre><code>steps:\n- uses: actions/checkout@v4\n- uses: actions/setup-java@v4\n  with:\n    distribution: 'corretto'\n    java-version: '21'\n    cache: 'maven'\n</code></pre> </li> </ul>"},{"location":"caching/#cache-action","title":"cache action","text":"<p>The action/cache </p>"},{"location":"caching/#cache-storage","title":"Cache Storage","text":"<p>Info</p> <ul> <li>When using github.com and github hosted runner, cache will be stored on GitHub-owned cloud storage.</li> <li>When using github.com and self hosted runner, cache will be stored on GitHub-owned cloud storage.</li> <li>When using GitHub Enterprise Server and self hosted runner, cache will be stored on customer-owned storage.</li> </ul> <ul> <li> <p>Caching dependencies to speed up workflows</p> <ul> <li> <p>https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/caching-dependencies-to-speed-up-workflows</p> <p>When using self-hosted runners, caches from workflow runs are stored on GitHub-owned cloud storage. A customer-owned storage solution is only available with GitHub Enterprise Server.</p> </li> </ul> </li> <li> <p>Enabling GitHub Actions with Amazon S3 storage</p> <ul> <li> <p>https://docs.github.com/en/enterprise-server@3.15/admin/managing-github-actions-for-your-enterprise/enabling-github-actions-for-github-enterprise-server/enabling-github-actions-with-amazon-s3-storage</p> <p>GitHub Actions uses external blob storage to store data generated by workflow runs. Stored data includes workflow logs, caches, and user-uploaded build artifacts.</p> </li> </ul> </li> </ul>"},{"location":"certificate/","title":"Certificate","text":""},{"location":"certificate/#author-and-maintain-workflows","title":"Author and maintain workflows","text":""},{"location":"certificate/#work-with-events-that-trigger-workflows","title":"Work with events that trigger workflows","text":"<ul> <li>Configure workflows to run for one or more events</li> <li>Configure workflows to run for scheduled events</li> <li>Configure workflows to run for manual events</li> <li>Configure workflows to run for webhook events (i.e. check_run, check_suite, deployment, etc.)</li> <li>Demonstrate a GitHub event to trigger a workflow based on a practical use case</li> </ul>"},{"location":"certificate/#use-the-components-of-a-workflows","title":"Use the components of a workflows","text":"<ul> <li>Identify the correct syntax for workflow jobs (i.e. indentation and encapsulation of parts of the workflow)</li> <li>Use job steps for actions and shell commands</li> <li>Use conditional keywords for steps</li> <li>Describe how actions, workflows, jobs, steps, runs, and the marketplace work together</li> <li>Identify scenarios suited for using GitHub-hosted and self-hosted runners</li> <li>Implement workflow commands as a run step to communicate with the runner</li> <li>Demonstrate the use of dependent jobs</li> </ul>"},{"location":"certificate/#use-encrypted-secrets-and-environment-variables-as-part-of-a-workflows","title":"Use encrypted secrets and environment variables as part of a workflows","text":"<ul> <li>Use encrypted secrets to store sensitive information</li> <li>Identify the available default environment variables during the construction of the workflow</li> <li>Identify the location to set custom environment variables in a workflow</li> <li>Identify when to use the GITHUB_TOKEN secret</li> <li>Demonstrate how to use workflow commands to set environment variables</li> </ul>"},{"location":"certificate/#create-a-workflow-for-a-particular-purpose","title":"Create a workflow for a particular purpose","text":"<ul> <li>Add a script to a workflow</li> <li>Demonstrate how to publish to GitHub Packages using a workflo</li> <li>Demonstrate how to publish to GitHub Container Registry using a workflow</li> <li>Use database and service containers in a GitHub Actions workflow</li> <li>Use labels to route workflows to specific runners</li> <li>Use CodeQL as a step in a workflow</li> <li>Demonstrate how to publish a component as a GitHub release using GitHub Actions</li> <li>Deploy a release to a cloud provider using a GitHub Actions workflows</li> </ul>"},{"location":"certificate/#manage-workow-runs","title":"Manage workow runs","text":"<ul> <li>Configure caching of workow dependencies</li> <li>Identify steps to pass data between jobs in a workow</li> <li>Remove workow artifacts from GitHub</li> <li>Add a workow status badge</li> <li>Add environment protections</li> <li>Define a matrix of dierent job congurations</li> <li>Implement workow approval gates</li> </ul> <p>Consume workflows Author and maintain actions Manage GitHub Actions for the enterprise</p>"},{"location":"composite-actions/","title":"Composite actions","text":""},{"location":"composite-actions/#composite-actions","title":"Composite actions","text":"<ul> <li>https://docs.github.com/en/actions/sharing-automations/creating-actions/creating-a-composite-actions</li> <li>https://docs.github.com/en/actions/sharing-automations/avoiding-duplication</li> </ul>"},{"location":"references/","title":"References","text":""},{"location":"references/#certificate","title":"Certificate","text":"<ul> <li>https://github.blog/news-insights/product-news/github-certifications-are-generally-available/</li> <li>https://github.com/LadyKerr/github-certification-guide</li> <li>https://learn.microsoft.com/en-us/collections/n5p4a5z7keznp5</li> <li>https://techcommunity.microsoft.com/blog/azuredevcommunityblog/study-guide-github-actions-certification/4194955</li> <li>https://examregistration.github.com/certification/ACTIONS</li> <li>https://assets.ctfassets.net/wfutmusr1t3h/2mMJ6nECbUAdiQMTObbPw6/4b66f25661e8aadcb4db984a95071682/github-actions-exam-preparation-study-guide.pdf</li> </ul>"},{"location":"references/#github-actions","title":"GitHub Actions","text":"<ul> <li>https://docs.github.com/en/actions</li> <li>https://docs.github.com/en/enterprise-server@3.15/admin/managing-github-actions-for-your-enterprise</li> </ul>"},{"location":"reusable-workflows/","title":"Reusable workflows","text":""},{"location":"reusable-workflows/#reusable-workflows","title":"Reusable workflows","text":"<ul> <li>https://docs.github.com/en/actions/sharing-automations/reusing-workflows</li> <li>https://docs.github.com/en/actions/sharing-automations/avoiding-duplication</li> </ul> <p>Github actions workflow often has some cases which reusable workflow already exists. For example, When providing CICD using github actions in organization, there are some cases that Build, Test, Scan, and Deploy will be used same actions. In that cases, It's complicated like maintenance and take a lot of maintenance cost when the workflow definition write to each github repo. If you use <code>Reusable workflows</code>, common workflow definitions like Build, Test, Scan, and Deploy can be centrally maintained. So, common workflow definitions will be managed centrally, and then the app repo will be refered to that repo. If you want to update common workflow definitions, you would update one repo only.</p> <p>In github doc, <code>caller</code> is workflow of app repo and then <code>called</code> is reusable workflow.</p> <p>A workflow that uses another workflow is referred to as a \"caller\" workflow. The reusable workflow is a \"called\" workflow.</p> <p>The followings are differences between reusable workflow and composite action.</p> <ul> <li>The reusable workflow can be run by each jobs and steps as is reusable workflow definitions. The composite action will be run as one step that caller definition.</li> <li>Also, there are diffrences that the logging is each jobs and steps as is reusable workflow definitions, or one step that caller definition.</li> <li>The reusable workflow can specify different machine type than caller job in each job.</li> <li>The composite action will be run as part of caller workflow, however the reusable workflow will be run as completly one job independetly. So can't add the steps before and after in the reusable workflow. And also <code>GITHUB_ENV</code> can't pass to sequent job steps.</li> </ul> <p>Also, please check here about key differences between reusable workflow and composite action.</p>"},{"location":"reusable-workflows/#how-to-call-the-reusable-workflow","title":"How to call the reusable workflow","text":"<ul> <li>https://docs.github.com/en/actions/sharing-automations/reusing-workflows#calling-a-reusable-workflow</li> </ul>"},{"location":"reusable-workflows/#using-a-matrix","title":"Using a matrix","text":"<ul> <li>https://docs.github.com/en/actions/sharing-automations/reusing-workflows#using-a-matrix-strategy-with-a-reusable-workflows</li> </ul>"},{"location":"reusable-workflows/#trigger-event","title":"Trigger event","text":"<p><code>on.workflow_call</code> need to define to reusable workflow yaml file.</p> <ul> <li>https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#onworkflow_call</li> <li>https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#workflow_call</li> </ul> <pre><code>on:\n  workflow_call:\n</code></pre>"},{"location":"reusable-workflows/#variable-environment-variable-and-secret","title":"Variable, Environment variable, and Secret","text":"<ul> <li>https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#onworkflow_callinputs</li> <li>https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#onworkflow_callsecrets</li> <li>https://docs.github.com/en/actions/sharing-automations/reusing-workflows#limitations<ul> <li>Variable, Environment variable, and Secret need to define in the caller reusable workflow job for using its in the reusable workflow.     caller workflow<pre><code>jobs:\n  call-reusable:\n    uses: my-org/reusable-workflow/.github/workflows/main.yml@main\n    with:\n      some_input: value                          # You can pass the Variable to the reusable workflow by defiining the `inputs` in the reusable workflow.\n    env:\n      MESSAGE: hello                             # This is able to pass to `jobs.&lt;job&gt;.env` in the called reusable workflow.\n    secrets:\n      SECRET_TOKEN: ${{ secrets.MY_SECRET }}     # You can pass the Secret to the reusable workflow by defiining the `secrets` in the reusable workflow.\n</code></pre> called workflow(reusable workflow)<pre><code>on:\n  workflow_call:\n    inputs:\n      some_input:\n        required: true\n        type: string\n    secrets:\n      SECRET_TOKEN:\n        required: true\n\njobs:\n  echo-job:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Print message\n        run: echo \"Message is: $MESSAGE\"\n</code></pre></li> </ul> </li> <li>When the same organization both caller repo and called repo, Secret can use the inherit keyword to implicitly pass the secrets. In this case, you don't need to specify Secrets definitions to reusable workflow. Note: <code>secrets: inherit</code> is that Secret can be passed directly called workflow. So in workflow A -&gt; B -&gt; C case, you need to specify <code>secrets: inherit</code> in the workflow A and workflow B, if you want to pass to workflow C.     caller workflow<pre><code>jobs:\n  call-reusable:\n    uses: my-org/reusable-workflow/.github/workflows/main.yml@main\n    secrets: inherit\n</code></pre></li> </ul>"},{"location":"reusable-workflows/#reusable-workflow-runs-as-a-part-of-caller-workflow","title":"Reusable workflow runs as a part of caller workflow.","text":"<ul> <li>If <code>actions/checkout</code> runs in the reusable workflow, github repo of caller workflow will be checked out.</li> <li>The <code>github</code> context is always associated with the caller workflow.</li> <li>The permission of <code>github.token</code> and <code>secrets.GITHUB_TOKEN</code> are always associated with the caller workflow.</li> </ul>"},{"location":"secrets/","title":"Secrets","text":""},{"location":"secrets/#secrets","title":"Secrets","text":"<ul> <li>https://docs.github.com/en/actions/security-for-github-actions/security-guides/about-secrets</li> <li>https://docs.github.com/en/actions/security-for-github-actions/security-guides/using-secrets-in-github-actions</li> <li>https://docs.github.com/en/codespaces/managing-codespaces-for-your-organization/managing-development-environment-secrets-for-your-repository-or-organization</li> </ul>"},{"location":"steps/","title":"Steps","text":""},{"location":"steps/#steps","title":"Steps","text":""},{"location":"steps/#uses","title":"uses","text":""},{"location":"steps/#run","title":"run","text":"<p>shell</p>"},{"location":"certificate/author_and_maintain_workflows/01_work_with_events_that_trigger_workflows/","title":"Work with events that trigger workflows","text":"<p>https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/triggering-a-workflow</p> <p>When you specify the trigger for running the workflow, use <code>on:</code> values.</p>"},{"location":"certificate/author_and_maintain_workflows/01_work_with_events_that_trigger_workflows/#configure-workows-to-run-for-one-or-more-events","title":"Configure workows to run for one or more events","text":""},{"location":"certificate/author_and_maintain_workflows/01_work_with_events_that_trigger_workflows/#using-a-single-event","title":"Using a single event","text":""},{"location":"certificate/author_and_maintain_workflows/01_work_with_events_that_trigger_workflows/#using-a-multiple-event","title":"Using a multiple event","text":""},{"location":"certificate/author_and_maintain_workflows/01_work_with_events_that_trigger_workflows/#using-activity-types","title":"Using activity types","text":"<ul> <li>Some events have activity types that what kind of types do the event occured.</li> <li>e.g. In the <code>issue_comment</code> case, there are activity types like <code>created</code>, <code>edited</code>, <code>deleted</code>.</li> <li>Regarding to activity types each event, please refer to here.</li> <li>https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#onevent_nametypes ing filters</li> <li>Some events have filters that you can more controll the workfow should run or not.</li> <li>e.g. In the <code>push</code> case, there are filters like <code>branches</code>, <code>tag</code>, <code>branches-ignore</code>, <code>tags-ignore</code>.<ul> <li>https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#onpull_requestpull_request_targetbranchesbranches-ignore</li> <li>https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#onpushbranchestagsbranches-ignoretags-ignore</li> <li>https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore</li> </ul> </li> </ul> <p>Info</p> <ul> <li> <p>https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/triggering-a-workflow#using-activity-types-and-filters-with-multiple-events</p> <p>You can't use branches and branches-ignore to filter the same event in a single workflow. Similarly, you can't use tags and tags-ignore to filter the same event in a single workflow. If you want to both include and exclude branch or tag patterns for a single event, use the branches or tags filter along with the ! character to indicate which branches or tags should be excluded.</p> <p>If you define a branch with the ! character, you must also define at least one branch without the ! character. If you only want to exclude branches, use branches-ignore instead. Similarly, if you define a tag with the ! character, you must also define at least one tag without the ! character. If you only want to exclude tags, use tags-ignore instead.</p> </li> </ul>"},{"location":"certificate/author_and_maintain_workflows/01_work_with_events_that_trigger_workflows/#conifigure-workows-to-run-for-scheduled-events","title":"Conifigure workows to run for scheduled events","text":"<ul> <li>https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#schedule</li> <li>You can schedule a workflow to run at specific UTC times using POSIX cron syntax.</li> </ul> <p>Info</p> <p>Please refer to https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#schedule</p> <ul> <li>The schedule will be delayed during periods of high loads of GitHub Actions workflow runs.<ul> <li>If the load is sufficiently high enough, some queued jobs may be dropped.</li> <li>High load times include the start of every hour.</li> </ul> </li> <li>The scheduled events will only run on the default branch.</li> <li>In a public repository, scheduled workflows are automatically disabled when no repository activity has occurred in 60 days.<ul> <li>For information on re-enabling a disabled workflow, see Disabling and enabling a workflow.</li> </ul> </li> <li>When the last user to commit to the cron schedule of a workflow is removed from the organization, the scheduled workflow will be disabled. <ul> <li>If a user with write permissions to the repository makes a commit that changes the cron schedule, the scheduled workflow will be reactivated. </li> </ul> </li> </ul>"},{"location":"certificate/author_and_maintain_workflows/01_work_with_events_that_trigger_workflows/#configure-workows-to-run-for-manual-events","title":"Configure workows to run for manual events","text":"<ul> <li>https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/triggering-a-workflow#defining-inputs-for-manually-triggered-workflows</li> <li>https://docs.github.com/en/actions/managing-workflow-runs-and-deployments/managing-workflow-runs/manually-running-a-workflow</li> <li>The <code>workflow_dispatch</code> event can run manually.<ul> <li>The <code>workflow_dispatch</code> can define the <code>inputs</code> parameter for specifying when running workflow manually.<ul> <li>The maximum number of top-level properties for inputs is 10.</li> </ul> </li> </ul> </li> </ul>"},{"location":"certificate/author_and_maintain_workflows/01_work_with_events_that_trigger_workflows/#configure-workflows-to-run-for-webhook-events-ie-check_run-check_suite-deployment-etc","title":"Configure workflows to run for webhook events (i.e. check_run, check_suite, deployment, etc.)","text":"<ul> <li>https://docs.github.com/en/webhooks/webhook-events-and-payloads<ul> <li>Payloads are capped at 25 MB. If you have many branches, or tags, the push event will be delivered many payloads.</li> <li>Which events do you want to run the webhook, you can select events when the webhook creating.</li> </ul> </li> </ul>"},{"location":"certificate/author_and_maintain_workflows/01_work_with_events_that_trigger_workflows/#demonstrate-a-github-event-to-trigger-a-workow-based-on-a-practical-use-case","title":"Demonstrate a GitHub event to trigger a workow based on a practical use case","text":""},{"location":"certificate/author_and_maintain_workflows/02_use_the_components_of_a_workflows/","title":"Use the components of a workflows","text":""},{"location":"certificate/author_and_maintain_workflows/02_use_the_components_of_a_workflows/#identify-the-correct-syntax-for-workflow-jobs-ie-indentation-and-encapsulation-of-parts-of-the-workflow","title":"Identify the correct syntax for workflow jobs (i.e. indentation and encapsulation of parts of the workflow)","text":"<ul> <li>This section is the basical grammar, how to configure.</li> <li>https://docs.github.com/en/actions/writing-workflows</li> </ul>"},{"location":"certificate/author_and_maintain_workflows/02_use_the_components_of_a_workflows/#use-job-steps-for-actions-and-shell-commands","title":"Use job steps for actions and shell commands","text":"<ul> <li>The github actions workflow is consisted one or more jobs. Also, one job is consisted one or more steps.</li> <li>One or more jobs, each of which will execute on a runner machine and run a series of one or more steps.<ul> <li>https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#jobsjob_idsteps</li> </ul> </li> <li>In the step section, you need to specify either the <code>uses</code> for specifying the action or the <code>run</code> for specifying the command-line programs.<ul> <li>https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsuses</li> <li>https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun</li> </ul> </li> </ul>"},{"location":"certificate/author_and_maintain_workflows/02_use_the_components_of_a_workflows/#use-conditional-keywords-for-steps","title":"Use conditional keywords for steps","text":"<ul> <li>https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#jobsjob_idif</li> <li>https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsif</li> <li>https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs</li> <li>https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/using-conditions-to-control-job-execution</li> </ul>"},{"location":"certificate/author_and_maintain_workflows/02_use_the_components_of_a_workflows/#describe-how-actions-workflows-jobs-steps-runs-and-the-marketplace-work-together","title":"Describe how actions, workflows, jobs, steps, runs, and the marketplace work together","text":"<ul> <li>Workflow pipelines are defined in the <code>.github/workflows/</code> dir with yaml file.</li> <li>Workflow pipeline has one or more jobs.</li> <li>Job has one or more steps.</li> <li>Step has <code>runs</code> key for using other actions.</li> <li>There are public actions, commnity actions, and selh hosted actions(local repo or public reo) in actions.</li> </ul>"},{"location":"certificate/author_and_maintain_workflows/02_use_the_components_of_a_workflows/#marketplace","title":"Marketplace","text":"<ul> <li>https://github.com/marketplace</li> <li>You can find actions that you want to try. And then you can create custom action and publish to the marketplace if there aren't it.</li> <li>There are <code>Verified creators</code> or not in creators of action.<ul> <li>https://github.com/marketplace?verification=verified_creator&amp;type=actions</li> <li>e.g.<ul> <li>https://github.com/actions</li> <li>https://github.com/github</li> <li>https://github.com/aws-actions</li> </ul> </li> </ul> </li> </ul>"},{"location":"certificate/author_and_maintain_workflows/02_use_the_components_of_a_workflows/#caution-when-using-github-enterprise-server","title":"Caution when using github enterprise server","text":"<ul> <li>https://docs.github.com/en/enterprise-cloud@latest/admin/enforcing-policies/enforcing-policies-for-your-enterprise/enforcing-policies-for-github-actions-in-your-enterprise</li> </ul>"},{"location":"certificate/author_and_maintain_workflows/02_use_the_components_of_a_workflows/#identify-scenarios-suited-for-using-github-hosted-and-self-hosted-runners","title":"Identify scenarios suited for using GitHub-hosted and self-hosted runners","text":"<ul> <li>https://docs.github.com/en/actions/using-github-hosted-runners/using-github-hosted-runners/about-github-hosted-runners</li> <li>https://docs.github.com/en/actions/writing-workflows/choosing-where-your-workflow-runs/choosing-the-runner-for-a-job#choosing-self-hosted-runners</li> </ul>"},{"location":"certificate/author_and_maintain_workflows/02_use_the_components_of_a_workflows/#implement-workflow-commands-as-a-run-step-to-communicate-with-the-runner","title":"Implement workflow commands as a run step to communicate with the runner","text":"<ul> <li>https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/workflow-commands-for-github-actions<ul> <li>https://github.com/actions/toolkit/blob/main/packages/core/README.md</li> <li> <ul> <li>https://github.com/actions/toolkit/blob/master/docs/commands.md</li> </ul> </li> <li><code>workflow commands</code> are special function on the github actions to communicate to runner.</li> <li><code>workflow commands</code> can use in two usecases.<ul> <li>Using workflow commands to access toolkit functions</li> <li>Using workflow commands as annotations in workflow <code>run</code> step.</li> </ul> </li> </ul> </li> </ul>"},{"location":"certificate/author_and_maintain_workflows/02_use_the_components_of_a_workflows/#problem-matchers","title":"Problem Matchers","text":"<ul> <li>https://github.com/actions/toolkit/blob/master/docs/problem-matchers.md</li> <li>https://github.com/actions/toolkit/blob/master/docs/commands.md#problem-matchers</li> <li>You can regist problem matchers for error output, when printing on annotations.</li> <li> <p>sample</p> <ul> <li>multiline matcher<ul> <li>refer to https://github.com/actions/toolkit/blob/master/docs/problem-matchers.md#multiline-matching</li> </ul> </li> <li> <p>single line matcher</p> <pre><code>badFile.js: line 50, col 11, Error - 'myVar' is defined but never used. (no-unused-vars)\n</code></pre> </li> <li> <p>sample matcher</p> <pre><code>{\n    \"problemMatcher\": [\n        {\n            \"owner\": \"eslint-compact\",\n            \"pattern\": [\n                {\n                    \"regexp\": \"^(.+):\\\\sline\\\\s(\\\\d+),\\\\scol\\\\s(\\\\d+),\\\\s(Error|Warning|Info)\\\\s-\\\\s(.+)\\\\s\\\\((.+)\\\\)$\",\n                    \"file\": 1,\n                    \"line\": 2,\n                    \"column\": 3,\n                    \"severity\": 4,\n                    \"message\": 5,\n                    \"code\": 6\n                }\n            ]\n        }\n    ]\n}\n</code></pre> </li> </ul> </li> <li> <p>Some setup-{language} actions are already supported with problem matcher.</p> <ul> <li>e.g.<ul> <li> </li> </ul> </li> </ul>"},{"location":"certificate/author_and_maintain_workflows/02_use_the_components_of_a_workflows/#demonstrate-the-use-of-dependent-jobs","title":"Demonstrate the use of dependent jobs","text":""},{"location":"certificate/author_and_maintain_workflows/03_use_encrypted_secrets_and_environment_variables_as_part_of_a_workflows/","title":"Use encrypted secrets and environment variables as part of a workflow","text":""},{"location":"certificate/author_and_maintain_workflows/03_use_encrypted_secrets_and_environment_variables_as_part_of_a_workflows/#use-encrypted-secrets-to-store-sensitive-information","title":"Use encrypted secrets to store sensitive information","text":"<ul> <li>https://docs.github.com/en/actions/security-for-github-actions/security-guides/using-secrets-in-github-actions</li> </ul>"},{"location":"certificate/author_and_maintain_workflows/03_use_encrypted_secrets_and_environment_variables_as_part_of_a_workflows/#identify-the-available-default-environment-variables-during-the-construction-of-the-workflow","title":"Identify the available default environment variables during the construction of the workflow","text":"<ul> <li>https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/store-information-in-variables</li> <li>https://docs.github.com/en/actions/sharing-automations/reusing-workflows#limitations</li> </ul>"},{"location":"certificate/author_and_maintain_workflows/03_use_encrypted_secrets_and_environment_variables_as_part_of_a_workflows/#identify-the-location-to-set-custom-environment-variables-in-a-workflow","title":"Identify the location to set custom environment variables in a workflow","text":"<ul> <li>https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#env</li> </ul>"},{"location":"certificate/author_and_maintain_workflows/03_use_encrypted_secrets_and_environment_variables_as_part_of_a_workflows/#identify-when-to-use-the-github_token-secret","title":"Identify when to use the GITHUB_TOKEN secret","text":"<ul> <li>https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#permissions</li> </ul>"},{"location":"certificate/author_and_maintain_workflows/03_use_encrypted_secrets_and_environment_variables_as_part_of_a_workflows/#demonstrate-how-to-use-workflow-commands-to-set-environment-variables","title":"Demonstrate how to use workflow commands to set environment variables","text":""}]}